Массивы:
	Недостатки:
		1. Не динамические(чтобы изменить размер массива нужно создать новый массив
		передать значения старого массива и добавить нужные значение в новый массив)
		2. При пердачи массив в функцию в качестве параметра, передается копия массива 	
		а не сам массив, а это значи все изменения в массиве не сохранятся в основном 	
		массиве
		3. Передача огромного массива в функция емкий процесс т.к 2 пункт). Луччше
		использовать срезы.
Срезы:
	1.Срезы Go реализованы на основе массивов, следовательно, внутри каждого среза Go
	лежит массив.
	2.Срезы передаются в функции по ссылке — это означает, что фактически в функцию 
	передается адрес памяти переменной среза, и любые изменения, внесенные
	в срез внутри функции, не будут потеряны после выхода из нее. 
	3.Кроме того, большие  передаются в функцию значительно быстрее, чем массивы с тем же
	количеством элементов, поскольку в этом случае Go не делает копию среза, а лишь
	передает адрес памяти переменной среза.
	4.Емкость среза — это то, сколько места в памяти занимает срез в данный момент
	Поскольку размер срезов является динамической величиной, то, если  среза выходит за пределы 
	для него памяти, Go автоматически текущую емкость среза, чтобы выделить место для большего количества
	элементов 
	Нужно заметить, что емкость среза удваивается, только пока его длина не превысит
	1024 элементов. Далее она растет не более чем на 25 %.
Указатель:
	Указатели — адреса памяти, что обеспечивает повышение скорости в обмен на сложный для отладки код и
	неприятные ошибки.
	Плюсы:
		1.указатели позволяют обмениваться данными по ссылке, а не по значению, особенно между функциями Go
		2.указатели бывают чрезвычайно полезны, если вы хотите отличить нулевое значение от неприсвоенного
		3.Если в функцию передается структура и структура очень большая то лучше использовать указатели,
		так увеличится скорость работы приложения
